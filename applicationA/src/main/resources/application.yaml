server:
  port: 8080

clients:
  applicationB:
    url: http://localhost:8081/domainB

resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 30
        failureRateThreshold: 40
        slidingWindowType: COUNT_BASED
        permittedNumberOfCallsInHalfOpenState: 3
        waitDurationInOpenState: 50s
    instances:
      applicationC:
        baseConfig: default
        minimumNumberOfCalls: 10
      applicationB:
        registerHealthIndicator: true
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 10
        slidingWindowType: TIME_BASED
        minimumNumberOfCalls: 4
        waitDurationInOpenState: 20s
        failureRateThreshold: 70
        ignoreExceptions:
          - java.lang.IllegalArgumentException

resilience4j.retry:
  instances:
    applicationB:
      maxAttempts: 3
      waitDuration: 10s
      ignoreExceptions:
        - java.lang.IllegalArgumentException

resilience4j.ratelimiter:
  instances:
    applicationB:
      limitForPeriod: 2
      limitRefreshPeriod: 10s
      timeoutDuration: 2
      registerHealthIndicator: true

resilience4j.timelimiter:
  instances:
    applicationB:
      timeoutDuration: 2s
      cancelRunningFuture: true

resilience4j.bulkhead:
  instances:
    applicationB:
      maxWaitDuration: 10ms
      maxConcurrentCalls: 2

resilience4j.thread-pool-bulkhead:
  instances:
    applicationB:
      maxThreadPoolSize: 1
      coreThreadPoolSize: 1
      queueCapacity: 1
      writableStackTraceEnabled: true

management:
  endpoints:
    web:
      exposure:
        include: '*'

logging:
  level:
    org.springframework.web.reactive.function.client: DEBUG